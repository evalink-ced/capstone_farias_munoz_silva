# -*- coding: utf-8 -*-
# Django settings for colegio project.
# This file was generated by 'django-admin startproject' using Django 4.2.3.
# For more information on this file, see
# https://docs.djangoproject.com/en/4.2/topics/settings/
from django.contrib import admin
from django.shortcuts import redirect
from django.urls import path,include
from django.conf import settings
from django.conf.urls.static import static
from drf_spectacular.views import SpectacularAPIView, SpectacularSwaggerView, SpectacularRedocView
from django.http import HttpResponseRedirect
from django.views.generic import RedirectView
from colegio.admin_redirect import handle_server_error, handle_400_error, handle_403_error, handle_404_error
from colegio.views import health_check

urlpatterns = [
    path('', lambda request: redirect('/admin/')),
    path('admin/login/', lambda request: HttpResponseRedirect(settings.LOGIN_URL)),
    
    # Health check endpoint para mantener el servicio activo
    path('healthz', health_check, name='health_check'),

    path('admin/', admin.site.urls),
    path('ckeditor5/', include('django_ckeditor_5.urls')),
    path('accounts/google/login/callback/', RedirectView.as_view(url='/api/callback/', permanent=False)),
    path('auth/social/', include('allauth.socialaccount.urls')),
    path('accounts/', include('allauth.urls')),

    # Agrupa las apps en una estructura ordenada
    path('', include('proyectoapp.urls')),
    path('licencia/', include('licencia.urls')),
    path('vacaciones/', include('vacaciones.urls')),
    path('birthday/', include('birthday.urls')),
    path('beneficio/', include('beneficio.urls')),
    path('formulario/', include('formulario.urls')),
    path('institucion/', include('institucion.urls')),
    path('api/', include('api.urls')),
    path('edesempeno/', include('edesempeño.urls')),
    path('evaluacion/', include('evaluacion.urls')),
    path('acceso/', include('acceso.urls')),
    path('theme/', include('theme.urls')),
    path('protocolo/', include('protocolo.urls')),
    path("api/schema/", SpectacularAPIView.as_view(), name="schema"),
    
    # Swagger UI
    path("api/docs/", SpectacularSwaggerView.as_view(url_name="schema"), name="swagger-ui"),

    # ReDoc
    path("api/redoc/", SpectacularRedocView.as_view(url_name="schema"), name="redoc"),
    # Define la vista de index al final para evitar conflictos con otras rutas vacías
    #path('', TemplateView.as_view(template_name='index.html'), name='index'),    
]
 


# Servir archivos estáticos siempre
urlpatterns += static(settings.STATIC_URL, document_root = settings.STATIC_ROOT)

# Servir archivos media solo en desarrollo (no necesario con Google Cloud Storage en producción)
if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)

# Manejo de errores del servidor
handler500 = 'colegio.admin_redirect.handle_server_error'
handler404 = 'colegio.admin_redirect.handle_404_error'
handler403 = 'colegio.admin_redirect.handle_403_error'
handler400 = 'colegio.admin_redirect.handle_400_error'