# Generated by Django 5.2.5 on 2025-09-26 23:11

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import usuarios.utils.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('institucion', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(max_length=50)),
                ('descripcion', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ciclo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ciclo', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Codigo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genero', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('password', models.CharField(default='1320', editable=False, max_length=100, verbose_name='contraseña')),
                ('rut', models.CharField(max_length=12, null=True, validators=[usuarios.utils.validators.validate_rut], verbose_name='RUT')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='usuario')),
                ('first_name', models.CharField(max_length=30, verbose_name='nombre')),
                ('last_name', models.CharField(max_length=30, verbose_name='Apellido')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='correo')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='cumpleaños')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='foto/', verbose_name='Fotografía')),
                ('date_joined', models.DateField(default=django.utils.timezone.localdate, verbose_name='Fecha Ingreso')),
                ('tipo_contrato', models.CharField(choices=[('INDEF', 'Indefinido'), ('PLAZO', 'Plazo fijo')], default='INDEF', max_length=6, verbose_name='Tipo de contrato')),
                ('fecha_termino_contrato', models.DateField(blank=True, null=True, verbose_name='Fecha término contrato')),
                ('d_ini', models.FloatField(default=0, verbose_name='Cantidad Inicial')),
                ('observacion_dia', models.TextField(blank=True, null=True, verbose_name='Observación Día')),
                ('dias_tomados', models.FloatField(default=0, verbose_name='Días Tomados')),
                ('dias_restantes', models.FloatField(default=2, verbose_name='Días Restantes')),
                ('dias_cumpleanios', models.FloatField(default=1, verbose_name='Días cumpleaños')),
                ('cumpleanio_ocupado', models.FloatField(default=0, verbose_name='Días cumpleaños ocupado')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='super usuario')),
                ('empresa', models.ForeignKey(blank=True, help_text='DEPRECADO: Usar asignaciones_trabajo en su lugar', null=True, on_delete=django.db.models.deletion.SET_NULL, to='institucion.empresa', verbose_name='Empresa (Deprecado)')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_group', to='auth.group', verbose_name='grupo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('jefe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinados', to=settings.AUTH_USER_MODEL, verbose_name='jefe')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('cargo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuarios.cargo', verbose_name='Cargo')),
                ('ciclo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuarios.ciclo', verbose_name='Ciclo')),
                ('codigo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuarios.codigo', verbose_name='Código')),
                ('genero', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuarios.genero', verbose_name='Género')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContactoEmergencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del contacto')),
                ('telefono', models.CharField(max_length=120, verbose_name='Teléfono')),
                ('parentezco', models.CharField(max_length=50, verbose_name='Parentesco')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contactos_emergencia', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Contacto de Emergencia',
                'verbose_name_plural': 'Contactos de Emergencia',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['rut'], name='usuarios_us_rut_faeaf0_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='usuarios_us_email_8f583f_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['date_joined'], name='usuarios_us_date_jo_d0b070_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['tipo_contrato'], name='usuarios_us_tipo_co_a9b793_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active'], name='usuarios_us_is_acti_233d13_idx'),
        ),
    ]
